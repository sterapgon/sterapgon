Sub CountValuesInWorkbook() 'นับจำนวนในไฟล์ที่แยกเป็นข้อๆ มาแล้ว แสดงผลผ่านไฟล์ LOG
    Dim ws As Worksheet
    Dim wsDict As Object
    Dim totalDict As Object
    Dim lastRow As Long
    Dim cell As Range
    Dim logFilePath As String
    Dim logFile As Integer
    Dim key As Variant
    Dim grandTotal As Long
    
    ' Initialize dictionaries and grand total counter
    Set totalDict = CreateObject("Scripting.Dictionary")
    grandTotal = 0
    
    ' Define log file path in the same folder as the workbook
    logFilePath = ThisWorkbook.Path & "\COUNTCHKNID_SPARE.txt"
    logFile = FreeFile
    Open logFilePath For Output As #logFile
    
    ' Loop through each worksheet in the workbook
    For Each ws In ThisWorkbook.Sheets
        ' Skip if sheet name is "NID"
        If ws.Name <> "NID" Then
            Set wsDict = CreateObject("Scripting.Dictionary")
            lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
            
            ' Debug log - start processing each sheet
            Debug.Print "Processing sheet: " & ws.Name
            
            ' Loop through each cell in column B of the current sheet
            For Each cell In ws.Range("B2:B" & lastRow)
                If Not IsEmpty(cell.Value) Then
                    ' Update sheet-specific dictionary
                    If wsDict.exists(cell.Value) Then
                        wsDict(cell.Value) = wsDict(cell.Value) + 1
                    Else
                        wsDict.Add cell.Value, 1
                    End If
                    
                    ' Update total workbook dictionary
                    If totalDict.exists(cell.Value) Then
                        totalDict(cell.Value) = totalDict(cell.Value) + 1
                    Else
                        totalDict.Add cell.Value, 1
                    End If
                    
                    ' Increment grand total count
                    grandTotal = grandTotal + 1
                    
                    ' Debug log for each cell processed
                    Debug.Print "Value '" & cell.Value & "' in row " & cell.Row & " of sheet " & ws.Name
                End If
            Next cell
            
            ' Write per-sheet counts to the log file
            Print #logFile, "Counts for sheet: " & ws.Name
            Print #logFile, "-----------------------------"
            For Each key In wsDict.keys
                Print #logFile, "Value: " & key & " - Count: " & wsDict(key)
            Next key
            Print #logFile, vbCrLf ' Line break between sheets
        End If
    Next ws
    
    ' Write total workbook counts to the log file
    Print #logFile, "Total Counts Across Workbook"
    Print #logFile, "-----------------------------"
    For Each key In totalDict.keys
        Print #logFile, "Value: " & key & " - Total Count: " & totalDict(key)
        Debug.Print "Value: " & key & " - Total Count: " & totalDict(key)
    Next key
    
    ' Write the grand total to the log file
    Print #logFile, vbCrLf & "Grand Total of All Values: " & grandTotal
    Debug.Print "Grand Total of All Values: " & grandTotal
    
    ' Close the log file
    Close #logFile
    
    ' Debug log - finished processing all sheets
    Debug.Print "Finished processing all sheets. Log file created at: " & logFilePath
    
    ' Notify the user
    MsgBox "Counting completed. Check the log file at: " & logFilePath, vbInformation
End Sub

    Sub ClearNullValues() ' ค้นหาคำว่า (null) แล้วลบออกทั้ง workbook
        Dim ws As Worksheet
        Dim cell As Range
        Dim lastRow As Long
        Dim lastCol As Long
        
        ' Loop through each worksheet in the workbook
        For Each ws In ThisWorkbook.Sheets
            ' Find the last row and last column with data
            lastRow = ws.Cells(ws.Rows.Count, 1).End(xlUp).Row
            lastCol = ws.Cells(1, ws.Columns.Count).End(xlToLeft).Column
            
            ' Loop through each cell in the used range of the sheet
            For Each cell In ws.Range(ws.Cells(1, 1), ws.Cells(lastRow, lastCol))
                If cell.Value = "(null)" Then
                    cell.ClearContents
                    ' Debug log - indicate the cell cleared
                    Debug.Print "Cleared (null) in cell " & cell.Address & " of sheet " & ws.Name
                End If
            Next cell
        Next ws
        
        ' Notify the user
        MsgBox "All '(null)' values have been cleared from the workbook.", vbInformation
    End Sub

    Sub ResetAllSheetColorsAndResizeCells() ' รีเซตสีทั้ง workbook และปรับขนาด
        Dim ws As Worksheet
        
        ' Loop through each worksheet in the workbook
        For Each ws In ThisWorkbook.Sheets
            ' Clear any background color by setting Interior.ColorIndex to xlNone
            ws.Cells.Interior.ColorIndex = xlNone
            
            ' Set all rows' height to 15
            ws.Rows.RowHeight = 15
            
            ' Set all columns' width to 15
            ws.Columns.ColumnWidth = 15
            
            ' Debug log - indicate the sheet color reset and resizing
            Debug.Print "Cleared all colors and resized cells in sheet: " & ws.Name
        Next ws
        
        ' Notify the user
        MsgBox "All cell colors have been reset and cell sizes adjusted to 15 in every sheet.", vbInformation
    End Sub
    